<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: route_guide.proto

namespace Routeguide;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * <pre>
 * A RouteSummary is received in response to a RecordRoute rpc.
 * It contains the number of individual points received, the number of
 * detected features, and the total distance covered as the cumulative sum of
 * the distance between each point.
 * </pre>
 *
 * Protobuf type <code>routeguide.RouteSummary</code>
 */
class RouteSummary extends \Google\Protobuf\Internal\Message
{
    /**
     * <pre>
     * The number of points received.
     * </pre>
     *
     * <code>int32 point_count = 1;</code>
     */
    private $point_count = 0;
    /**
     * <pre>
     * The number of known features passed while traversing the route.
     * </pre>
     *
     * <code>int32 feature_count = 2;</code>
     */
    private $feature_count = 0;
    /**
     * <pre>
     * The distance covered in metres.
     * </pre>
     *
     * <code>int32 distance = 3;</code>
     */
    private $distance = 0;
    /**
     * <pre>
     * The duration of the traversal in seconds.
     * </pre>
     *
     * <code>int32 elapsed_time = 4;</code>
     */
    private $elapsed_time = 0;

    public function __construct() {
        \GPBMetadata\RouteGuide::initOnce();
        parent::__construct();
    }

    /**
     * <pre>
     * The number of points received.
     * </pre>
     *
     * <code>int32 point_count = 1;</code>
     */
    public function getPointCount()
    {
        return $this->point_count;
    }

    /**
     * <pre>
     * The number of points received.
     * </pre>
     *
     * <code>int32 point_count = 1;</code>
     */
    public function setPointCount($var)
    {
        GPBUtil::checkInt32($var);
        $this->point_count = $var;
    }

    /**
     * <pre>
     * The number of known features passed while traversing the route.
     * </pre>
     *
     * <code>int32 feature_count = 2;</code>
     */
    public function getFeatureCount()
    {
        return $this->feature_count;
    }

    /**
     * <pre>
     * The number of known features passed while traversing the route.
     * </pre>
     *
     * <code>int32 feature_count = 2;</code>
     */
    public function setFeatureCount($var)
    {
        GPBUtil::checkInt32($var);
        $this->feature_count = $var;
    }

    /**
     * <pre>
     * The distance covered in metres.
     * </pre>
     *
     * <code>int32 distance = 3;</code>
     */
    public function getDistance()
    {
        return $this->distance;
    }

    /**
     * <pre>
     * The distance covered in metres.
     * </pre>
     *
     * <code>int32 distance = 3;</code>
     */
    public function setDistance($var)
    {
        GPBUtil::checkInt32($var);
        $this->distance = $var;
    }

    /**
     * <pre>
     * The duration of the traversal in seconds.
     * </pre>
     *
     * <code>int32 elapsed_time = 4;</code>
     */
    public function getElapsedTime()
    {
        return $this->elapsed_time;
    }

    /**
     * <pre>
     * The duration of the traversal in seconds.
     * </pre>
     *
     * <code>int32 elapsed_time = 4;</code>
     */
    public function setElapsedTime($var)
    {
        GPBUtil::checkInt32($var);
        $this->elapsed_time = $var;
    }

}

