INFO:spyne.application:Initializing application {spyne.examples.hello.http}Application...
DEBUG:spyne.interface._base:populating __main__.HelloWorldService types...
DEBUG:spyne.interface._base:  enumerating classes for method 'say_hello'
DEBUG:spyne.interface._base:    adding class "<class 'spyne.model.complex.say_hello'>" for '{spyne.examples.hello.http}say_hello'
DEBUG:spyne.interface._base:    adding say_hello.name = <class 'spyne.model.primitive.string.String'>
DEBUG:spyne.interface._base:    adding class "<class 'spyne.model.primitive.string.String'>" for '{http://www.w3.org/2001/XMLSchema}string'
DEBUG:spyne.interface._base:    adding say_hello.times = <class 'spyne.model.primitive.number.UnsignedInteger'>
DEBUG:spyne.interface._base:    adding class "<class 'spyne.model.primitive.number.UnsignedInteger'>" for '{http://www.w3.org/2001/XMLSchema}nonNegativeInteger'
DEBUG:spyne.interface._base:    adding class "<class 'spyne.model.complex.say_helloResponse'>" for '{spyne.examples.hello.http}say_helloResponse'
DEBUG:spyne.interface._base:    adding say_helloResponse.say_helloResult = <class 'spyne.model.complex.Iterable'>
DEBUG:spyne.interface._base:    adding class "<class 'spyne.model.complex.Iterable'>" for '{spyne.examples.hello.http}stringArray'
DEBUG:spyne.interface._base:    adding stringArray.string = <class 'spyne.model.primitive.string.String'>
DEBUG:spyne.interface._base:populating '__main__.HelloWorldService' routes...
DEBUG:spyne.interface._base:  adding method HelloWorldService.say_hello to match '{spyne.examples.hello.http}say_hello' tag.
DEBUG:spyne.interface._base:From this point on, you're not supposed to make any changes to the class and method structure of the exposed services.
DEBUG:spyne.util.appreg:Registering <spyne.application.Application object at 0x7f846eaad810> as ('spyne.examples.hello.http', 'Application')
Traceback (most recent call last):
  File "../tasks//python/rpc/server.py", line 98, in <module>
    server = make_server('195.251.251.27', 8000, wsgi_application)
  File "/usr/lib64/python2.7/wsgiref/simple_server.py", line 151, in make_server
    server = server_class((host, port), handler_class)
  File "/usr/lib64/python2.7/SocketServer.py", line 417, in __init__
    self.server_bind()
  File "/usr/lib64/python2.7/wsgiref/simple_server.py", line 48, in server_bind
    HTTPServer.server_bind(self)
  File "/usr/lib64/python2.7/BaseHTTPServer.py", line 108, in server_bind
    SocketServer.TCPServer.server_bind(self)
  File "/usr/lib64/python2.7/SocketServer.py", line 431, in server_bind
    self.socket.bind(self.server_address)
  File "/usr/lib64/python2.7/socket.py", line 228, in meth
    return getattr(self._sock,name)(*args)
socket.error: [Errno 98] Address already in use

real	0m0.125s
user	0m0.109s
sys	0m0.015s
